{"version":3,"sources":["components/utils/theme.js","components/FeedbackOptions/Feedbackoptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/Section/Section.styled.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["theme","Object","freeze","colors","white","ButtonColor","TextColor","animation","time","Button","styled","button","props","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","StatisticsWrapper","div","StatisticsItem","span","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","Section","title","children","Notification","message","AppWrapper","App","useState","setGood","setNeutral","setBad","target","textContent","state","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAaA,EAAQC,OAAOC,OAAO,CACjCC,OAAQ,CACNC,MAAO,UACPC,YAAa,2BACbC,UAAW,UACXC,UAAW,QACXC,KAAM,kC,6BCJGC,EAASC,IAAOC,OAAV,2aAGG,SAACC,GAAD,OAAWA,EAAMZ,MAAMG,OAAOE,eAElC,SAACO,GAAD,OAAWA,EAAMZ,MAAMG,OAAOG,aACrC,SAACM,GAAD,OAAWA,EAAMZ,MAAMG,OAAOG,aAMzB,SAACM,GAAD,yBACEA,EAAMZ,MAAMG,OAAOI,UADrB,YACkCK,EAAMZ,MAAMG,OAAOK,SAC/D,SAACI,GAAD,0BACaA,EAAMZ,MAAMG,OAAOI,UADhC,YAC6CK,EAAMZ,MAAMG,OAAOK,SAIpD,SAACI,GAAD,wBAAsBA,EAAMZ,MAAMG,OAAOC,U,OCjBpD,SAASS,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,cAACR,EAAD,CAAqBS,QAASH,EAA9B,SACGE,GADUA,QCNd,I,EAAME,EAAoBT,IAAOU,IAAV,yEAIjBC,EAAiBX,IAAOY,KAAV,kFCFpB,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAuBG,KACvB,eAACH,EAAD,uBAA0BI,KAC1B,eAACJ,EAAD,mBAAsBK,KACtB,eAACL,EAAD,qBAAwBM,KACxB,eAACN,EAAD,iCAAoCO,EAApC,UCTC,I,EAAMC,EAAQnB,IAAOoB,GAAV,6GACC,SAAClB,GAAD,yBAAuBA,EAAMZ,MAAMG,OAAOC,MAA1C,QCAZ,SAAS2B,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,oCACGD,GAAS,cAACH,EAAD,UAAQG,IACjBC,KCJA,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,4BAAIA,ICFN,IAAMC,EAAa1B,IAAOU,IAAV,sFAGZ,SAACR,GAAD,OAAWA,EAAMZ,MAAMG,OAAOG,aCGlC,SAAS+B,IACd,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAmBMd,EAAMH,EAAOC,EAAUC,EAU7B,OACE,eAACU,EAAD,WACE,cAACL,EAAD,CAASC,MAAM,uBAAf,SACE,cAACnB,EAAD,CACEC,QANY,CAAC,OAAQ,UAAW,OAOhCC,gBAhCoB,SAAC,GAE3B,OAF0C,EAAb2B,OACRC,aAEnB,IAAK,OACHJ,GAAQ,SAAAK,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHH,GAAO,SAAAG,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,aAsBS,IAAVjB,GACC,cAACO,EAAD,CAAcC,QAAQ,sBAEvBR,EAAQ,GACP,cAACI,EAAD,CAASC,MAAM,aAAf,SACE,cAACT,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACPC,MAAOA,EACPC,mBA1BgC,SAACD,GAEvC,OAAOkB,KAAKC,MAAO,IAAMtB,EAAQG,GAwBPoB,CAAgCpB,UCnD9DqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAelD,MAAOA,EAAtB,SACE,cAACqC,EAAD,QAGJc,SAASC,eAAe,W","file":"static/js/main.36030560.chunk.js","sourcesContent":["export const theme = Object.freeze({\n  colors: {\n    white: \"#ffffff\",\n    ButtonColor: \"rgba(216, 191, 216, 0.1)\",\n    TextColor: \"#D8BFD8\",\n    animation: \"250ms\",\n    time: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n  },\n});\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 40px;\n  background-color: ${(props) => props.theme.colors.ButtonColor};\n  border-radius: 4px;\n  border-color: ${(props) => props.theme.colors.TextColor};\n  color: ${(props) => props.theme.colors.TextColor};\n  font-family: \"Lobster\", cursive;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1.1);\n  }\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Button } from \"./Feedbackoptions.styled\";\n\nimport React from \"react\";\nexport function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map((option) => (\n        <Button key={option} onClick={onLeaveFeedback}>\n          {option}\n        </Button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const StatisticsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const StatisticsItem = styled.span`\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StatisticsWrapper, StatisticsItem } from \"./Statistics.styled\";\n\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <StatisticsWrapper>\n      <StatisticsItem>Good: {good}</StatisticsItem>\n      <StatisticsItem>Neutral: {neutral}</StatisticsItem>\n      <StatisticsItem>Bad: {bad}</StatisticsItem>\n      <StatisticsItem>Total: {total}</StatisticsItem>\n      <StatisticsItem>Positive feedback: {positivePercentage}%</StatisticsItem>\n    </StatisticsWrapper>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h2`\n  border-bottom: ${(props) => `1px solid${props.theme.colors.white} `};\n  border-bottom-style: dotted;\n  display: inline-block;\n`;\n","import PropTypes from \"prop-types\";\nimport { Title } from \"./Section.styled\";\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function Notification({ message }) {\n  return <p>{message}</p>;\n}\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from \"@emotion/styled\";\n\nexport const AppWrapper = styled.div`\n  margin-left: 50px;\n  margin-top: 50px;\n  color: ${(props) => props.theme.colors.TextColor};\n`;\n","\nimport React, { useState } from \"react\";\nimport { FeedbackOptions } from \"../FeedbackOptions/FeedbackOptions\";\nimport { Statistics } from \"../Statistics/Statistics\";\nimport { Section } from \"../Section/Section\";\nimport { Notification } from \"../Notification/Notification\";\nimport { AppWrapper } from \"./App.styled\";\n\nexport function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleFeedbackGiven = ({ target }) => {\n    const value = target.textContent;\n    switch (value) {\n      case \"good\":\n        setGood(state => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral(state => state + 1);\n        break;\n      case \"bad\":\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n\n  };\n  const total=good + neutral + bad;\n \n  const countPositiveFeedbackPercentage = (total) => {\n\n    return Math.round((100 * good) / total);\n    \n  };\n\n  const ButtonInner = [\"good\", \"neutral\", \"bad\"];\n\n  return (\n    <AppWrapper>\n      <Section title=\"Please live feedback\">\n        <FeedbackOptions\n          options={ButtonInner}\n          onLeaveFeedback={handleFeedbackGiven}\n        ></FeedbackOptions>\n      </Section>\n      {total === 0 && (\n        <Notification message=\"No feedback given\"></Notification>\n      )}\n      {total > 0 && (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n          total={total}\n          positivePercentage={countPositiveFeedbackPercentage(total)}\n          />\n        </Section>\n      )}\n    </AppWrapper>\n  );\n\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { theme } from \"./components/utils/theme\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}